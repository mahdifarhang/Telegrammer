version: '3.8'
services:
  web:
    build:
      context: .
      dockerfile: Docker/Dockerfile
    restart: no
    # entrypoint: python3 manage.py runserver 0.0.0.0:8000
    environment:
      DJANGO_ENV: production
      DJANGO_SECRET_KEY: 'sp7x+9d6=i0)g5^ersgh&x5!t1*!f=6xypc$t5$(%d+n%wlz=s'
      DJANGO_DB_HOST: db
      DJANGO_DB_NAME: telegrammer_database
      DJANGO_DB_USER: telegrammer_database_user
      DJANGO_DB_PASSWD: telegrammer_database_password
      
      # entry point settings
      PIP_INSTALL_REQUIREMENTS: 'off'
      DJANGO_MANAGEPY_MIGRATE: 'on'
      DJANGO_MANAGEPY_COLLECTSTATIC: 'on'

      # Setup uWSGI with environment variable instead of config file:
      UWSGI_UID: 987
      UWSGI_GID: 982
      UWSGI_CHMOD_SOCKET: 664
      # UWSGI_HTTP: :8000
      UWSGI_SOCKET: :8000
      UWSGI_MASTER: 1
      UWSGI_VACUUM: 1
      UWSGI_CHDIR: /code
      UWSGI_MODULE: telegrammer.wsgi
      UWSGI_WORKERS: 2
      UWSGI_THREADS: 5
      UWSGI_LOG_5XX: 1
      UWSGI_DISABLE_LOGGING: 1
      UWSGI_BUFFER_SIZE: 32768
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./staticfiles/:/code/staticfiles/:Z
      - ./media/:/code/media/:Z
    ports:
      - "0.0.0.0:8000:8000"
    depends_on:
      - db

  db:
    image: postgres
    restart: unless-stopped
    ## Allow access from Development machine
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: telegrammer_database
      POSTGRES_USER: telegrammer_database_user
      POSTGRES_PASSWORD: telegrammer_database_password
      TZ: 'Asia/Tehran'
      PGTZ: 'Asia/Tehran'
      ## To go to psql cli, run `docker compose exec db bash` and
      ## run `psql --user telegrammer_database_user -d telegrammer_database` (\l - \q - \h will help you)
